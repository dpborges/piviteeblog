# Declare variables to be passed into your templates.

# replicaCount: 1

# Virtual Enviroments created via namespaces (eg pic-dev, pic-test, pic-prod).
# The env name (dev, test, prod) is used to qualify the externalName service residing in default
# namespace, that routes traffic to the respective ClusterIP services running in the  given namespace
# (pic-dev, pic-test, pic-prod).
# Ingress routes traffic to externalName service, which in turn routes to the correposning ClusterIP
# services.
# I recommend maintaining separate externalNames for 2 modes:  prod and test or dev in test
# This Ingress supports 2 parallel enviroments for the aforementioned modes.
# Numeric values (eg env1) are used as opposed to named values (devenv, testenv) to be able
# change either one to dev, test, prod, or some other value in the future like qa
# or staging. 

# *************************************************************************************
# The following environment names are used to qualify the cluster ip services by env 
# name that are used by this Ingress resource 
# *************************************************************************************
env1: dev
env2: test

# *************************************************************************************
# The following domain names are used to generate environment specific host names 
# in the Ingress resource 
# *************************************************************************************
# Supported Domain Names
picDomainName: pitchinclub.com
# pivityDomainName: pivitycloud.com   FUTURE INSTALL

# image:
#   repository: nginx
#   pullPolicy: IfNotPresent
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: ""

# imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""

# podAnnotations: {}

# podSecurityContext: {}
#   # fsGroup: 2000

# securityContext: {}
#   # capabilities:
#   #   drop:
#   #   - ALL
#   # readOnlyRootFilesystem: true
#   # runAsNonRoot: true
#   # runAsUser: 1000

# service:
#   type: ClusterIP
#   port: 80

# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

# resources: {}
#   # We usually recommend not to specify default resources and to leave this as a conscious
#   # choice for the user. This also increases chances charts run on environments with little
#   # resources, such as Minikube. If you do want to specify resources, uncomment the following
#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi

# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80

# nodeSelector: {}

# tolerations: []

# affinity: {}
